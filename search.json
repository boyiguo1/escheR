[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Boyi Guo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/SRT_eg.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"goal escheR create unified multi-dimensional spatial visualizations spatially-resolved transcriptomics data following Gestalt principles. preprint describing innovative visualization available bioRxiv.","code":""},{"path":"/articles/SRT_eg.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"can install development version escheR GitHub : authors submitting package Bioconductor.","code":"if(!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"boyiguo1/escheR\")"},{"path":"/articles/SRT_eg.html","id":"input-data-format","dir":"Articles","previous_headings":"","what":"Input data format","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"examples , assume input data provided SpatialExperiment Bioconductor object. people whose data stored Seurat object, advise convert SpatialExperiment object applying workflow .","code":""},{"path":[]},{"path":"/articles/SRT_eg.html","id":"load-packages","dir":"Articles","previous_headings":"Tutorial","what":"Load Packages","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"run demonstration, two necessary packages load, escheR spatialLIBD. spatialLIBD contains pre-processed 10x Visium dataset. note, escheR automatically load ggplot2 package. Hence, explicitly loading ggplot2 required.","code":"library(escheR) library(spatialLIBD)"},{"path":"/articles/SRT_eg.html","id":"preparing-exmaple-data","dir":"Articles","previous_headings":"Tutorial","what":"Preparing Exmaple Data","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"step, find one 10xVisium sample spatialLIBD package, indexed “Br8667_mid” subsetting overall dorsolateral pre-frontal cortex (DLPFC) dataset spatialDLPFC_Visium. also apply optional step, creating categorical variable named spDomain. summary SpatialExperiment object called spe.","code":"if (!exists(\"spe\"))   spe <- fetch_data(\"spatialDLPFC_Visium\")  spe <- spe[, spe$sample_id == \"Br8667_mid\"] colData(spe)$spDomain <- factor(   spe$BayesSpace_harmony_09,   levels = c(1, 2, 3, 5, 8, 4, 7, 6, 9),   labels = c(\"L1\", \"L1\", \"L2\", \"L3\", \"L4\", \"L5\", \"L6\", \"WM\", \"WM\") ) spe #> class: SpatialExperiment  #> dim: 28916 3939  #> metadata(1): BayesSpace.data #> assays(2): counts logcounts #> rownames(28916): ENSG00000243485 ENSG00000238009 ... ENSG00000278817 #>   ENSG00000277196 #> rowData names(7): source type ... gene_type gene_search #> colnames(3939): AAACAACGAATAGTTC-1 AAACAAGTATCTCCCA-1 ... #>   TTGTTTGTATTACACG-1 TTGTTTGTGTAAATTC-1 #> colData names(156): age array_col ... wrinkle_type spDomain #> reducedDimNames(8): 10x_pca 10x_tsne ... HARMONY UMAP.HARMONY #> mainExpName: NULL #> altExpNames(0): #> spatialCoords names(2) : pxl_col_in_fullres pxl_row_in_fullres #> imgData names(4): sample_id image_id data scaleFactor"},{"path":"/articles/SRT_eg.html","id":"setting-up-for-escher-plot","dir":"Articles","previous_headings":"Tutorial","what":"Setting up for escheR plot","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"Similar ggplot2::ggplot(), first use function make_escheR() create empty plot. input make_escheR() SpatialExperiment object. output function ggplot object layer .","code":"p <- make_escheR(spe)"},{"path":"/articles/SRT_eg.html","id":"adding-layers","dir":"Articles","previous_headings":"Tutorial","what":"Adding layers","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"Unlike ggplot2, use piping |> instead + apply layers figure. Mainly, three functions add_fill, add_ground, add_symbol. inputs add_* functions include plots created using make_scheR() variable name layer. Currently, variable name column data spe object, .e. colData(spe). first apply add_fill add spots color-coded total umi counts spots(sum_umi).  okay use combination add_* functions. example, want show spatial domains samples ground figure use symbols denote spot within outline tissue slice. example, plotted spots outlines tissue slice hence marked dots.   okay change ordering add_* functions. However, advise always add_fill first step achieve best visual effect due laying mechanism.","code":"p |>    add_fill(var = \"sum_umi\") (p2 <- p |>   add_ground(var = \"spDomain\")) # round layer p2 |>    add_symbol(var = \"in_tissue\", size = 0.2) # Symbol layer"},{"path":"/articles/SRT_eg.html","id":"adjusting-aesthetics","dir":"Articles","previous_headings":"Tutorial","what":"Adjusting Aesthetics","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"change aesthetics layer, one can simply use scale_* ggplot2 optimize final visual presentation. example, optimize add_fill, one can use scale_fill_*; optimize add_ground, one can use scale_color_*; optimize add_sumbol, one use scale_shape_*. , demonstrate change color ground layer ( add_ground) using scale_color_manual.","code":"# Currated color pallette from spatialLIBD spatialLIBD::libd_layer_colors #>        Layer1        Layer2        Layer3        Layer4        Layer5  #>     \"#F0027F\"     \"#377EB8\"     \"#4DAF4A\"     \"#984EA3\"     \"#FFD700\"  #>        Layer6            WM            NA           WM2  #>     \"#FF7F00\"     \"#1A1A1A\" \"transparent\"     \"#666666\"  p2 +   scale_color_manual(     name = \"\",    # No legend name     values = libd_layer_colors |> # Named vector for color       setNames(c(paste0(\"L\", 1:6), \"WM\", \"NA\", \"WM2\"))   ) +   labs(title = \"Example Title\")"},{"path":"/articles/SRT_eg.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Create Multi-dimensional Plot of Spatially-resolved Transcriptomics Data","text":"","code":"sessionInfo() #> R version 4.2.1 (2022-06-23) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur ... 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] spatialLIBD_1.11.9          SpatialExperiment_1.6.1     #>  [3] SingleCellExperiment_1.18.1 SummarizedExperiment_1.26.1 #>  [5] Biobase_2.56.0              GenomicRanges_1.48.0        #>  [7] GenomeInfoDb_1.32.4         IRanges_2.30.1              #>  [9] S4Vectors_0.34.0            BiocGenerics_0.42.0         #> [11] MatrixGenerics_1.8.1        matrixStats_0.63.0          #> [13] escheR_0.1.0                ggplot2_3.4.1               #> [15] BiocStyle_2.24.0            #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.3                    R.utils_2.12.2                #>   [3] tidyselect_1.2.0              RSQLite_2.3.0                 #>   [5] AnnotationDbi_1.58.0          htmlwidgets_1.6.1             #>   [7] grid_4.2.1                    BiocParallel_1.30.4           #>   [9] DropletUtils_1.16.0           munsell_0.5.0                 #>  [11] ScaledMatrix_1.4.1            codetools_0.2-19              #>  [13] ragg_1.2.5                    statmod_1.5.0                 #>  [15] DT_0.27                       withr_2.5.0                   #>  [17] colorspace_2.1-0              filelock_1.0.2                #>  [19] config_0.3.1                  highr_0.10                    #>  [21] knitr_1.42                    rstudioapi_0.14               #>  [23] shinyWidgets_0.7.6            labeling_0.4.2                #>  [25] GenomeInfoDbData_1.2.8        bit64_4.0.5                   #>  [27] farver_2.1.1                  rhdf5_2.40.0                  #>  [29] rprojroot_2.0.3               vctrs_0.5.2                   #>  [31] generics_0.1.3                xfun_0.37                     #>  [33] BiocFileCache_2.4.0           R6_2.5.1                      #>  [35] doParallel_1.0.17             ggbeeswarm_0.7.1              #>  [37] rsvd_1.0.5                    locfit_1.5-9.7                #>  [39] fields_14.1                   bitops_1.0-7                  #>  [41] rhdf5filters_1.8.0            cachem_1.0.7                  #>  [43] DelayedArray_0.22.0           promises_1.2.0.1              #>  [45] BiocIO_1.6.0                  scales_1.2.1                  #>  [47] beeswarm_0.4.0                gtable_0.3.1                  #>  [49] beachmat_2.12.0               benchmarkmeData_1.0.4         #>  [51] spam_2.9-1                    rlang_1.0.6                   #>  [53] systemfonts_1.0.4             rtracklayer_1.56.1            #>  [55] lazyeval_0.2.2                BiocManager_1.30.20           #>  [57] yaml_2.3.7                    httpuv_1.6.9                  #>  [59] tools_4.2.1                   usethis_2.1.6                 #>  [61] bookdown_0.33                 ellipsis_0.3.2                #>  [63] jquerylib_0.1.4               RColorBrewer_1.1-3            #>  [65] sessioninfo_1.2.2             Rcpp_1.0.10                   #>  [67] sparseMatrixStats_1.8.0       zlibbioc_1.42.0               #>  [69] purrr_1.0.1                   RCurl_1.98-1.10               #>  [71] viridis_0.6.2                 cowplot_1.1.1                 #>  [73] ggrepel_0.9.3                 fs_1.6.1                      #>  [75] magrittr_2.0.3                data.table_1.14.8             #>  [77] magick_2.7.3                  pkgload_1.3.2                 #>  [79] mime_0.12                     evaluate_0.20                 #>  [81] xtable_1.8-4                  XML_3.99-0.13                 #>  [83] gridExtra_2.3                 compiler_4.2.1                #>  [85] scater_1.24.0                 tibble_3.2.0                  #>  [87] maps_3.4.1                    crayon_1.5.2                  #>  [89] R.oo_1.25.0                   htmltools_0.5.4               #>  [91] later_1.3.0                   tidyr_1.3.0                   #>  [93] DBI_1.1.3                     ExperimentHub_2.4.0           #>  [95] dbplyr_2.3.1                  rappdirs_0.3.3                #>  [97] Matrix_1.5-3                  cli_3.6.0                     #>  [99] R.methodsS3_1.8.2             benchmarkme_1.0.8             #> [101] parallel_4.2.1                dotCall64_1.0-2               #> [103] golem_0.3.5                   pkgconfig_2.0.3               #> [105] pkgdown_2.0.7                 GenomicAlignments_1.32.1      #> [107] plotly_4.10.1                 scuttle_1.6.3                 #> [109] xml2_1.3.3                    roxygen2_7.2.3                #> [111] paletteer_1.5.0               foreach_1.5.2                 #> [113] vipor_0.4.5                   bslib_0.4.2                   #> [115] dqrng_0.3.0                   XVector_0.36.0                #> [117] attempt_0.3.1                 stringr_1.5.0                 #> [119] digest_0.6.31                 Biostrings_2.64.1             #> [121] rmarkdown_2.20                edgeR_3.38.4                  #> [123] DelayedMatrixStats_1.18.2     restfulr_0.0.15               #> [125] curl_5.0.0                    shiny_1.7.4                   #> [127] Rsamtools_2.12.0              rjson_0.2.21                  #> [129] lifecycle_1.0.3               jsonlite_1.8.4                #> [131] Rhdf5lib_1.18.2               BiocNeighbors_1.14.0          #> [133] desc_1.4.2                    viridisLite_0.4.1             #> [135] limma_3.52.4                  fansi_1.0.4                   #> [137] pillar_1.8.1                  lattice_0.20-45               #> [139] KEGGREST_1.36.3               fastmap_1.1.1                 #> [141] httr_1.4.5                    interactiveDisplayBase_1.34.0 #> [143] glue_1.6.2                    png_0.1-8                     #> [145] iterators_1.0.14              BiocVersion_3.15.2            #> [147] bit_4.0.5                     stringi_1.7.12                #> [149] sass_0.4.5                    HDF5Array_1.24.2              #> [151] rematch2_2.1.2                blob_1.2.3                    #> [153] textshaping_0.3.6             BiocSingular_1.12.0           #> [155] AnnotationHub_3.4.0           memoise_2.0.1                 #> [157] dplyr_1.1.0                   irlba_2.3.5.1"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boyi Guo. Author, maintainer. Stephanie C. Hicks. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guo B, Hicks SC (2023). “escheR: Unified multi-dimensional visualizations Gestalt principles.” bioRxiv. doi:10.1101/2023.03.18.533302, https://www.biorxiv.org/content/early/2023/03/23/2023.03.18.533302.","code":"@Article{,   title = {escheR: Unified multi-dimensional visualizations with Gestalt principles},   author = {Boyi Guo and Stephanie C. Hicks},   journal = {bioRxiv},   year = {2023},   doi = {10.1101/2023.03.18.533302},   publisher = {Cold Spring Harbor Laboratory},   url = {https://www.biorxiv.org/content/early/2023/03/23/2023.03.18.533302}, }"},{"path":"/index.html","id":"escher","dir":"","previous_headings":"","what":"Unified multi-dimensional visualizations with Gestalt principles","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"goal escheR create unified multi-dimensional spatial visualizations spatially-resolved transcriptomics data following Gestalt principles. preprint describing innovative visualization available bioRxiv.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"can install development version escheR GitHub : authors submitting package Bioconductor.","code":"# install.packages(\"devtools\") devtools::install_github(\"boyiguo1/escheR\")"},{"path":"/index.html","id":"input-data-format","dir":"","previous_headings":"","what":"Input data format","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"use escheR, assume input data provided SpatialExperiment Bioconductor object. people whose data stored Seurat object, advise convert SpatialExperiment object applying workflow .","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"preprint describing escheR available bioRxiv: Guo B, Hicks SC (2023). “escheR: Unified multi-dimensional visualizations Gestalt principles.” bioRxiv. doi:10.1101/2023.03.18.533302","code":""},{"path":"/reference/add_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding fill to highlight the figure in the spatial map — add_fill","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"Adding fill highlight figure spatial map","code":""},{"path":"/reference/add_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"","code":"add_fill(p, var, point_size = 2, ...)"},{"path":"/reference/add_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. point_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments.","code":""},{"path":"/reference/add_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"ggplot object.","code":""},{"path":"/reference/add_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"","code":"if (FALSE) { library(spatialLIBD)  if (!exists(\"spe\"))   spe <- fetch_data(\"spatialDLPFC_Visium\")  # Subset one sample spe <- spe[, spe$sample_id == \"Br8667_mid\"]  make_escheR(spe) |> add_ground(var = \"BayesSpace_harmony_09\") |> add_fill(var = \"\") }"},{"path":"/reference/add_ground.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding border to highlight the ground in the spatial map — add_ground","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"Adding border highlight ground spatial map","code":""},{"path":"/reference/add_ground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"","code":"add_ground(p, var, stroke = 0.5, point_size = 2, ...)"},{"path":"/reference/add_ground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. stroke numeric(1) specifying thickness border. point_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments.","code":""},{"path":"/reference/add_ground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"ggplot object.","code":""},{"path":"/reference/add_ground.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"","code":"if (FALSE) { library(spatialLIBD)  if (!exists(\"spe\"))   spe <- fetch_data(\"spatialDLPFC_Visium\")  # Subset one sample spe <- spe[, spe$sample_id == \"Br8667_mid\"]  make_escheR(spe) |> add_ground(var = \"BayesSpace_harmony_09\") }"},{"path":"/reference/add_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding symbols to each spot in the spatial map — add_symbol","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"Adding symbols spot spatial map","code":""},{"path":"/reference/add_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"","code":"add_symbol(p, var, size = 1, ...)"},{"path":"/reference/add_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. size numeric(1) specifying size symbols ggplot. Defaults 1. ... Reserved future arguments.","code":""},{"path":"/reference/add_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"ggplot object.","code":""},{"path":"/reference/add_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"","code":"if (FALSE) { library(spatialLIBD)  if (!exists(\"spe\"))   spe <- fetch_data(\"spatialDLPFC_Visium\")  # Subset one sample spe <- spe[, spe$sample_id == \"Br8667_mid\"]  make_escheR(spe) |> add_ground(var = \"BayesSpace_harmony_09\") |> add_symbol(var = \"intissue\") }"},{"path":"/reference/make_escheR.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new spatial map for spatial transcriptomics data — make_escheR","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"make_escheR() generic function initialize ggplot object contains spatial map. ggplot object saves input spatial transcriptomics data, transcriptomics data used following layering process add aesthestic components plot following grammar graphics ggplot2 syntax.","code":""},{"path":"/reference/make_escheR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"","code":"make_escheR(object, spot_size = 2, ...)  # S3 method for SpatialExperiment make_escheR(object, spot_size = 2, ...)"},{"path":"/reference/make_escheR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"object data object contains spatial transcriptomics data. Currently working spatial transcriptomics data SpatialExperiment objects. spot_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments.","code":""},{"path":"/reference/make_escheR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"ggplot object contains spatial transcriptomics data.","code":""},{"path":"/reference/make_escheR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"","code":"if (FALSE) { library(spatialLIBD)  if (!exists(\"spe\"))   spe <- fetch_data(\"spatialDLPFC_Visium\")  # Subset one sample spe <- spe[, spe$sample_id == \"Br8667_mid\"]  make_escheR(spe) }"},{"path":[]},{"path":"/news/index.html","id":"escher-0009000","dir":"Changelog","previous_headings":"","what":"escheR 0.0.0.9000","title":"escheR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
