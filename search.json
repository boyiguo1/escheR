[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Boyi Guo Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/SRT_eg.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with `escheR`","text":"goal escheR create unified multi-dimensional spatial visualizations spatially-resolved transcriptomics data following Gestalt principles. preprint describing innovative visualization available via bioRxiv.","code":""},{"path":"/articles/SRT_eg.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Getting Started with `escheR`","text":"can install latest release version escheR Bioconductor via following code. Additional details shown Bioconductor page. latest development version can also installed devel version Bioconductor GitHub following","code":"if (!require(\"BiocManager\", quietly = TRUE)) {   install.packages(\"BiocManager\") } BiocManager::install(\"escheR\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"boyiguo1/escheR\")  # `devel` version from Bioconductor BiocManager::install(version='devel')"},{"path":"/articles/SRT_eg.html","id":"input-data-format","dir":"Articles","previous_headings":"","what":"Input data format","title":"Getting Started with `escheR`","text":"Starting Version 1.2.0, escheR package supports three data structures, including SpatialExperiment, SingleCellExperiment, data.frame base R. following example, demonstrate use escheR SpatialExperiment object. Please visit tutorials [TODO: add items list].","code":""},{"path":[]},{"path":"/articles/SRT_eg.html","id":"load-packages","dir":"Articles","previous_headings":"Making escheR Plot","what":"Load Packages","title":"Getting Started with `escheR`","text":"run demonstration, two necessary packages load, escheR STexampleData. STexampleData contains pre-processed 10x Visium dataset. note, escheR automatically load ggplot2 package. Hence, explicitly loading ggplot2 required.","code":"library(escheR) library(STexampleData)"},{"path":"/articles/SRT_eg.html","id":"preparing-example-data","dir":"Articles","previous_headings":"Making escheR Plot","what":"Preparing example data","title":"Getting Started with `escheR`","text":"step, find one 10xVisium sample STexampleData package, indexed brain number “151673”. information, please see vignettes STexampleData. summary SpatialExperiment object called spe.","code":"spe <- Visium_humanDLPFC()  # Subset in-tissue spots spe <- spe[, spe$in_tissue == 1] spe <- spe[, !is.na(spe$ground_truth)] spe #> class: SpatialExperiment  #> dim: 33538 3611  #> metadata(0): #> assays(1): counts #> rownames(33538): ENSG00000243485 ENSG00000237613 ... ENSG00000277475 #>   ENSG00000268674 #> rowData names(3): gene_id gene_name feature_type #> colnames(3611): AAACAAGTATCTCCCA-1 AAACAATCTACTAGCA-1 ... #>   TTGTTTGTATTACACG-1 TTGTTTGTGTAAATTC-1 #> colData names(7): barcode_id sample_id ... ground_truth cell_count #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> spatialCoords names(2) : pxl_col_in_fullres pxl_row_in_fullres #> imgData names(4): sample_id image_id data scaleFactor"},{"path":"/articles/SRT_eg.html","id":"set-up-an-escher-plot","dir":"Articles","previous_headings":"Making escheR Plot","what":"Set up an escheR plot","title":"Getting Started with `escheR`","text":"Similar ggplot2::ggplot(), first use function make_escheR() create empty plot. input make_escheR() SpatialExperiment object. output function ggplot object layer .","code":"p <- make_escheR(spe)"},{"path":"/articles/SRT_eg.html","id":"adding-layers","dir":"Articles","previous_headings":"Making escheR Plot","what":"Adding layers","title":"Getting Started with `escheR`","text":"Unlike ggplot2, use piping |> instead + apply layers figure. Mainly, three functions add_fill, add_ground, add_symbol. inputs add_* functions include plots created using make_scheR() variable name layer. Currently, variable name column data spe object, .e. colData(spe). first apply add_fill add spots color-coded total number cells spots(sum_umi).  okay use combination add_* functions. example, want show spatial domains samples ground figure use symbols denote spot within outline tissue slice. example, plotted spots outlines tissue slice hence marked dots.   okay change ordering add_* functions. However, advise always add_fill first step achieve best visual effect due laying mechanism.","code":"(p1 <- p |>    add_fill(var = \"cell_count\")) (p2 <- p |>    add_ground(var = \"ground_truth\")) # round layer p2 |>   add_symbol(var = \"ground_truth\", size = 0.2) # Symbol layer #> Warning: The shape palette can deal with a maximum of 6 discrete values because #> more than 6 becomes difficult to discriminate; you have 7. Consider #> specifying shapes manually if you must have them. #> Warning: Removed 513 rows containing missing values (`geom_point()`)."},{"path":[]},{"path":"/articles/SRT_eg.html","id":"choosing-color-palette-for-add_fill-and-add_ground","dir":"Articles","previous_headings":"Customize escheR Plot","what":"Choosing Color Palette for add_fill and add_ground","title":"Getting Started with `escheR`","text":"maximize utility multi-dimensional plot applying color-coded layers using add_fill() add_ground(), important choose minimally interfering color-palette fill ground avoid visualization confusion. following demonstration provide examples simultaneously visualization two variables regardless types (continuous vs categorical, categorical vs categorical.)","code":""},{"path":"/articles/SRT_eg.html","id":"coninuous-variable-gene-expression-vs-categorical-variable-spatial-domains","dir":"Articles","previous_headings":"Customize escheR Plot > Choosing Color Palette for add_fill and add_ground","what":"Coninuous variable (gene expression) vs Categorical variable (Spatial Domains)","title":"Getting Started with `escheR`","text":"following example visualizes differential gene expression MOBP, marker gene white matter, across different spatial domains. default color palette, viridis, easily visible color-coded spatial domains overlapping color space, lead possible confusion.  improve visualization, choose use color included color palette ground_truth, color black. Specifically, use color gradient white (expression) black (maximum gene counts) represent expression MOBP spot. using white-black color gradient gene expression, minimize overlapping choice color spatial domains.  customizing color palettes minimally overlapping, easier observe MOBP higher raw gene counts white matter (WM) region regions.","code":"# Prep data # Adding gene counts for MBP to the colData spe$counts_MOBP <- counts(spe)[which(rowData(spe)$gene_name==\"MOBP\"),]  (p <- make_escheR(spe) |>      add_fill(var = \"counts_MOBP\") |>      add_ground(var = \"ground_truth\", stroke = 0.5)) (p2 <- p +     scale_fill_gradient(low = \"white\", high = \"black\"))"},{"path":"/articles/SRT_eg.html","id":"categorical-variable-vs-categorical-variable","dir":"Articles","previous_headings":"Customize escheR Plot > Choosing Color Palette for add_fill and add_ground","what":"Categorical variable Vs Categorical variable","title":"Getting Started with `escheR`","text":"example, demonstrate optimize color palettes visualizing two categorical variables. first create arbitrary 5-level categorical variable called tmp_group, representing different horizontal regions tissue section. Following principle avoid overlapping two color palettes, use gradients blue different levels tmp_group.  another example try another manually-curated color-palette. follow principle, minimize overlapping two color-palettes ground (scale_color_manual) fill (scale_fill_brewer) respectively. Specifically, use gradients blue show tmp_group colors spatial domains ground_truth.","code":"spe$tmp_group <- cut(   spe$array_row,    breaks = c(min(spe$array_row)-1 ,              fivenum(spe$array_row)) )  table(spe$tmp_group) #>  #>  (-1,0]  (0,18] (18,36] (36,52] (52,73]  #>      40     864     933     893     881 make_escheR(spe) |>    add_fill(var = \"tmp_group\") |>    add_ground(var = \"ground_truth\", stroke = 0.5) +   scale_fill_brewer() +   theme_void() make_escheR(spe) |>    add_fill(var = \"tmp_group\") |>    add_ground(var = \"ground_truth\", stroke = 0.5) +   scale_fill_brewer() +   scale_color_manual(     name = \"\", # turn off legend name for ground_truth     values = c(       \"Layer1\" = \"#F0027F\",       \"Layer2\" = \"transparent\",       \"Layer3\" = \"#4DAF4A\",       \"Layer4\" = \"#984EA3\",       \"Layer5\" = \"#FFD700\",       \"Layer6\" = \"#FF7F00\",       \"WM\" = \"#1A1A1A\")   )"},{"path":"/articles/SRT_eg.html","id":"guidance-in-choosing-bivariate-color-palette","dir":"Articles","previous_headings":"Customize escheR Plot > Choosing Color Palette for add_fill and add_ground","what":"Guidance in choosing bivariate color palette","title":"Getting Started with `escheR`","text":"vignettes, don’t provide recommend specific color palettes, selection color palettes highly relevant underlying message heterogeneous across analysis studies, e.g. sequential palettes, qualitative palette, divergent palette. Instead, direct interested user explore topic bivariate color palette. blog post Jakub Nowosad R package biscale helpful optimize color palette bivariate visualization. addition, color palette extremely curate, e.g. large number levels, possible use symbols (add_symbol()) annotate specific levels avoid clutter color space.","code":""},{"path":"/articles/SRT_eg.html","id":"adjusting-aesthetics","dir":"Articles","previous_headings":"Customize escheR Plot","what":"Adjusting aesthetics","title":"Getting Started with `escheR`","text":"Given escheR package developed based ggplot2, aesthetics can easily adjusted following ggplot2 syntax. example, given escheR plot object, one can use + theme_*, scale_* functions. example, change aesthetics layer, one can simply use scale_* ggplot2 optimize final visual presentation. example, optimize add_fill, one can use scale_fill_*; optimize add_ground, one can use scale_color_*; optimize add_sumbol, one use scale_shape_*. , demonstrate change color ground layer ( add_ground) using scale_color_manual.","code":"(p_final <- p2 +   scale_color_manual(     name = \"\", # No legend name     values = c(       \"Layer1\" = \"#F0027F\",       \"Layer2\" = \"#377EB8\",       \"Layer3\" = \"#4DAF4A\",       \"Layer4\" = \"#984EA3\",       \"Layer5\" = \"#FFD700\",       \"Layer6\" = \"#FF7F00\",       \"WM\" = \"#1A1A1A\")   ) +   labs(title = \"Example Title\"))"},{"path":"/articles/SRT_eg.html","id":"show-a-subset-of-levels","dir":"Articles","previous_headings":"Customize escheR Plot","what":"Show a subset of levels","title":"Getting Started with `escheR`","text":"easiest way show subset levels categorical variable create new variable unwanted levels set NA values. Please see example ","code":"table(spe$ground_truth, useNA = \"ifany\") #>  #> Layer1 Layer2 Layer3 Layer4 Layer5 Layer6     WM  #>    273    253    989    218    673    692    513  spe$tmp_fac <- factor(spe$ground_truth,                       levels = c(\"Layer1\", \"Layer2\")) table(spe$tmp_fac, useNA = \"ifany\") #>  #> Layer1 Layer2   <NA>  #>    273    253   3085  make_escheR(spe) |>    add_ground(var = \"ground_truth\") |>    add_symbol(var = \"tmp_fac\", size = 0.4) +    scale_shape_manual(     values=c(3, 16),    #> Set different symbols for the 2 levels     breaks = c(\"Layer1\", \"Layer2\") #> Remove NA from legend   ) #> Warning: Removed 3085 rows containing missing values (`geom_point()`)."},{"path":"/articles/SRT_eg.html","id":"multi-sample-figure","dir":"Articles","previous_headings":"Customize escheR Plot","what":"Multi-sample Figure","title":"Getting Started with `escheR`","text":"design, make_escheR operates one sample. order create figure compiling spatial plots multiple samples, individual plots required via series calls make_escheR, possibly via loop iterator function (e.g. lapply). Given plots made individual samples stored preferred data structure (e.g. list), one can use many functions, e.g. cowplot::plot_grid, patchwork, compile arrange individual plots paneled figure. following example uses ggpubr::ggarrange create figure list escheR plots.","code":"# Create a list of `escheR` plots plot_list <- unique(spe$sample_id) |> # Create a list of sample names   lapply(FUN = function(.sample_id){ # Iterate over all samples     spe_single <- spe[, spe$sample_id == .sample_id]     make_escheR(spe_single) |>        add_fill(var = \"counts_MOBP\") |>        add_ground(var = \"ground_truth\", stroke = 0.5)) # Customize theme   }) library(ggpubr) plot_list <- list(p2, p2) ggarrange(   plotlist = plot_list,   ncol = 2, nrow = 1,   common.legend = TRUE)"},{"path":"/articles/SRT_eg.html","id":"save-escher-plot","dir":"Articles","previous_headings":"","what":"Save escheR plot","title":"Getting Started with `escheR`","text":"procedure save escheR plots exactly saving ggplot object. example , use function ggplot2::ggsave() save escheR plots pdf format.","code":"ggsave(   filename = \"path/file_name.pdf\",   plot = p_final )"},{"path":"/articles/SRT_eg.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Getting Started with `escheR`","text":"","code":"utils::sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ggpubr_0.6.0                STexampleData_1.8.0         #>  [3] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0 #>  [5] SummarizedExperiment_1.30.2 Biobase_2.60.0              #>  [7] GenomicRanges_1.52.0        GenomeInfoDb_1.36.3         #>  [9] IRanges_2.34.1              S4Vectors_0.38.2            #> [11] MatrixGenerics_1.12.3       matrixStats_1.0.0           #> [13] ExperimentHub_2.8.1         AnnotationHub_3.8.0         #> [15] BiocFileCache_2.8.0         dbplyr_2.3.3                #> [17] BiocGenerics_0.46.0         escheR_1.2.0                #> [19] ggplot2_3.4.3               BiocStyle_2.28.1            #>  #> loaded via a namespace (and not attached): #>   [1] RColorBrewer_1.1-3            jsonlite_1.8.7                #>   [3] magrittr_2.0.3                magick_2.8.0                  #>   [5] farver_2.1.1                  rmarkdown_2.25                #>   [7] fs_1.6.3                      zlibbioc_1.46.0               #>   [9] ragg_1.2.5                    vctrs_0.6.3                   #>  [11] memoise_2.0.1                 DelayedMatrixStats_1.22.6     #>  [13] RCurl_1.98-1.12               rstatix_0.7.2                 #>  [15] htmltools_0.5.6               S4Arrays_1.0.6                #>  [17] curl_5.0.2                    broom_1.0.5                   #>  [19] Rhdf5lib_1.22.1               rhdf5_2.44.0                  #>  [21] sass_0.4.7                    bslib_0.5.1                   #>  [23] desc_1.4.2                    cachem_1.0.8                  #>  [25] mime_0.12                     lifecycle_1.0.3               #>  [27] pkgconfig_2.0.3               Matrix_1.6-1.1                #>  [29] R6_2.5.1                      fastmap_1.1.1                 #>  [31] GenomeInfoDbData_1.2.10       shiny_1.7.5                   #>  [33] digest_0.6.33                 colorspace_2.1-0              #>  [35] AnnotationDbi_1.62.2          rprojroot_2.0.3               #>  [37] dqrng_0.3.1                   textshaping_0.3.6             #>  [39] RSQLite_2.3.1                 beachmat_2.16.0               #>  [41] filelock_1.0.2                labeling_0.4.3                #>  [43] fansi_1.0.4                   httr_1.4.7                    #>  [45] abind_1.4-5                   compiler_4.3.1                #>  [47] bit64_4.0.5                   withr_2.5.0                   #>  [49] backports_1.4.1               BiocParallel_1.34.2           #>  [51] carData_3.0-5                 DBI_1.1.3                     #>  [53] HDF5Array_1.28.1              R.utils_2.12.2                #>  [55] ggsignif_0.6.4                rappdirs_0.3.3                #>  [57] DelayedArray_0.26.7           rjson_0.2.21                  #>  [59] tools_4.3.1                   interactiveDisplayBase_1.38.0 #>  [61] httpuv_1.6.11                 R.oo_1.25.0                   #>  [63] glue_1.6.2                    rhdf5filters_1.12.1           #>  [65] promises_1.2.1                grid_4.3.1                    #>  [67] generics_0.1.3                gtable_0.3.4                  #>  [69] R.methodsS3_1.8.2             tidyr_1.3.0                   #>  [71] car_3.1-2                     utf8_1.2.3                    #>  [73] XVector_0.40.0                BiocVersion_3.17.1            #>  [75] pillar_1.9.0                  stringr_1.5.0                 #>  [77] limma_3.56.2                  later_1.3.1                   #>  [79] dplyr_1.1.3                   lattice_0.21-8                #>  [81] bit_4.0.5                     tidyselect_1.2.0              #>  [83] locfit_1.5-9.8                Biostrings_2.68.1             #>  [85] scuttle_1.10.2                knitr_1.44                    #>  [87] gridExtra_2.3                 bookdown_0.35                 #>  [89] edgeR_3.42.4                  xfun_0.40                     #>  [91] DropletUtils_1.20.0           stringi_1.7.12                #>  [93] yaml_2.3.7                    evaluate_0.21                 #>  [95] codetools_0.2-19              tibble_3.2.1                  #>  [97] BiocManager_1.30.22           cli_3.6.1                     #>  [99] xtable_1.8-4                  systemfonts_1.0.4             #> [101] munsell_0.5.0                 jquerylib_0.1.4               #> [103] Rcpp_1.0.11                   png_0.1-8                     #> [105] parallel_4.3.1                ellipsis_0.3.2                #> [107] pkgdown_2.0.7                 blob_1.2.4                    #> [109] sparseMatrixStats_1.12.2      bitops_1.0-7                  #> [111] viridisLite_0.4.2             scales_1.2.1                  #> [113] purrr_1.0.2                   crayon_1.5.2                  #> [115] rlang_1.1.1                   cowplot_1.1.1                 #> [117] KEGGREST_1.40.0"},{"path":[]},{"path":"/articles/more_than_visium.html","id":"spatialexperiment-inherits-singlecellexperiment","dir":"Articles","previous_headings":"Visualized Dimensionality Reduced Embedding with SingleCellExperiment","what":"SpatialExperiment inherits SingleCellExperiment","title":"Beyond Sequence-based Spatially-Resolved Data","text":"Following syntax, one can also visualize dimensionality reduced embeddings SpatialExperiment object providing argument dimred non-null value. Hence, first 2 columns corresponding reducedDim(spe) assay used x-y coordinate plot, replacing spatialCoords(spe).","code":"library(escheR) library(STexampleData) library(scater) library(scran)  spe <- Visium_humanDLPFC() |>    logNormCounts() top.gene <- getTopHVGs(spe, n=500)  set.seed(100) # See below. spe <- runPCA(spe, subset_row = top.gene)   make_escheR(   spe,   dimred = \"PCA\" ) |>    add_fill(var = \"ground_truth\") +   theme_minimal()"},{"path":"/articles/more_than_visium.html","id":"image-based-spatialexperiment-object","dir":"Articles","previous_headings":"","what":"Image-based SpatialExperiment Object","title":"Beyond Sequence-based Spatially-Resolved Data","text":"demonstrate principle escheR can used visualize image-based spatially-resolved data pending optimization, include two image-based spatially resolved transcriptomics data generated via seqFish platform Slide-seq V2 platform respectively. two datasets previously curated STexampleData package","code":""},{"path":"/articles/more_than_visium.html","id":"seqfish","dir":"Articles","previous_headings":"Image-based SpatialExperiment Object","what":"seqFISH","title":"Beyond Sequence-based Spatially-Resolved Data","text":"NOTE: trimming colData(spe) piping make-escheR reduce computation time make plots, specifically colData(spe) contains extremely large number irrelavent features/columns.","code":"library(STexampleData) library(escheR) spe_seqFISH <- seqFISH_mouseEmbryo()  make_escheR(spe_seqFISH) |>   add_fill(var = \"embryo\")"},{"path":"/articles/more_than_visium.html","id":"slideseqv2","dir":"Articles","previous_headings":"Image-based SpatialExperiment Object","what":"SlideSeqV2","title":"Beyond Sequence-based Spatially-Resolved Data","text":"","code":"library(STexampleData) library(escheR) spe_slideseq <- SlideSeqV2_mouseHPC()  make_escheR(spe_slideseq) |>   add_fill(var = \"celltype\")"},{"path":"/articles/more_than_visium.html","id":"beyond-bioconductor-eco-system","dir":"Articles","previous_headings":"","what":"Beyond Bioconductor Eco-system","title":"Beyond Sequence-based Spatially-Resolved Data","text":"aim provide accessibility users regardless programming background preferred single-cell analysis pipelines. Nevertheless , limited resource, sustaining efforts prioritize towards maintenance established functionality optimization image-based spatially resolved data. regret able provide seamless interface R pipelines Seurat Giotto foreseeable future. Instead, provide generic function works data.frame object input. example, relevant features Suerat can easily exported data.frame object manually via tidyseurat[https://github.com/stemangiola/tidyseurat]. exported data frame can pipe escheR.","code":"library(escheR) library(Seurat) pbmc_small <- SeuratObject::pbmc_small pbmc_2pc <- pbmc_small@reductions$pca@cell.embeddings[,1:2] pbmc_meta <- pbmc_small@meta.data  #> Call generic function for make_escheR.data.frame make_escheR(   object = pbmc_meta,   .x = pbmc_2pc[,1],   .y = pbmc_2pc[,2]) |>    add_fill(var = \"groups\")"},{"path":"/articles/more_than_visium.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Beyond Sequence-based Spatially-Resolved Data","text":"","code":"utils::sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] BumpyMatrix_1.8.0           scran_1.28.2                #>  [3] scater_1.28.0               scuttle_1.10.2              #>  [5] STexampleData_1.8.0         SpatialExperiment_1.10.0    #>  [7] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 #>  [9] Biobase_2.60.0              GenomicRanges_1.52.0        #> [11] GenomeInfoDb_1.36.3         IRanges_2.34.1              #> [13] S4Vectors_0.38.2            MatrixGenerics_1.12.3       #> [15] matrixStats_1.0.0           ExperimentHub_2.8.1         #> [17] AnnotationHub_3.8.0         BiocFileCache_2.8.0         #> [19] dbplyr_2.3.3                BiocGenerics_0.46.0         #> [21] escheR_1.2.0                ggplot2_3.4.3               #>  #> loaded via a namespace (and not attached): #>   [1] jsonlite_1.8.7                magrittr_2.0.3                #>   [3] ggbeeswarm_0.7.2              magick_2.8.0                  #>   [5] farver_2.1.1                  rmarkdown_2.25                #>   [7] fs_1.6.3                      zlibbioc_1.46.0               #>   [9] ragg_1.2.5                    vctrs_0.6.3                   #>  [11] memoise_2.0.1                 DelayedMatrixStats_1.22.6     #>  [13] RCurl_1.98-1.12               htmltools_0.5.6               #>  [15] S4Arrays_1.0.6                curl_5.0.2                    #>  [17] BiocNeighbors_1.18.0          Rhdf5lib_1.22.1               #>  [19] rhdf5_2.44.0                  sass_0.4.7                    #>  [21] bslib_0.5.1                   desc_1.4.2                    #>  [23] cachem_1.0.8                  igraph_1.5.1                  #>  [25] mime_0.12                     lifecycle_1.0.3               #>  [27] pkgconfig_2.0.3               rsvd_1.0.5                    #>  [29] Matrix_1.6-1.1                R6_2.5.1                      #>  [31] fastmap_1.1.1                 GenomeInfoDbData_1.2.10       #>  [33] shiny_1.7.5                   digest_0.6.33                 #>  [35] colorspace_2.1-0              AnnotationDbi_1.62.2          #>  [37] rprojroot_2.0.3               dqrng_0.3.1                   #>  [39] irlba_2.3.5.1                 textshaping_0.3.6             #>  [41] RSQLite_2.3.1                 beachmat_2.16.0               #>  [43] labeling_0.4.3                filelock_1.0.2                #>  [45] fansi_1.0.4                   httr_1.4.7                    #>  [47] abind_1.4-5                   compiler_4.3.1                #>  [49] bit64_4.0.5                   withr_2.5.0                   #>  [51] BiocParallel_1.34.2           viridis_0.6.4                 #>  [53] DBI_1.1.3                     HDF5Array_1.28.1              #>  [55] R.utils_2.12.2                rappdirs_0.3.3                #>  [57] DelayedArray_0.26.7           bluster_1.10.0                #>  [59] rjson_0.2.21                  tools_4.3.1                   #>  [61] vipor_0.4.5                   beeswarm_0.4.0                #>  [63] interactiveDisplayBase_1.38.0 httpuv_1.6.11                 #>  [65] R.oo_1.25.0                   glue_1.6.2                    #>  [67] rhdf5filters_1.12.1           promises_1.2.1                #>  [69] grid_4.3.1                    cluster_2.1.4                 #>  [71] generics_0.1.3                gtable_0.3.4                  #>  [73] R.methodsS3_1.8.2             metapod_1.8.0                 #>  [75] BiocSingular_1.16.0           ScaledMatrix_1.8.1            #>  [77] utf8_1.2.3                    XVector_0.40.0                #>  [79] ggrepel_0.9.3                 BiocVersion_3.17.1            #>  [81] pillar_1.9.0                  stringr_1.5.0                 #>  [83] limma_3.56.2                  later_1.3.1                   #>  [85] dplyr_1.1.3                   lattice_0.21-8                #>  [87] bit_4.0.5                     tidyselect_1.2.0              #>  [89] locfit_1.5-9.8                Biostrings_2.68.1             #>  [91] knitr_1.44                    gridExtra_2.3                 #>  [93] edgeR_3.42.4                  xfun_0.40                     #>  [95] statmod_1.5.0                 DropletUtils_1.20.0           #>  [97] stringi_1.7.12                yaml_2.3.7                    #>  [99] evaluate_0.21                 codetools_0.2-19              #> [101] tibble_3.2.1                  BiocManager_1.30.22           #> [103] cli_3.6.1                     xtable_1.8-4                  #> [105] systemfonts_1.0.4             munsell_0.5.0                 #> [107] jquerylib_0.1.4               Rcpp_1.0.11                   #> [109] png_0.1-8                     parallel_4.3.1                #> [111] ellipsis_0.3.2                pkgdown_2.0.7                 #> [113] blob_1.2.4                    sparseMatrixStats_1.12.2      #> [115] bitops_1.0-7                  viridisLite_0.4.2             #> [117] scales_1.2.1                  purrr_1.0.2                   #> [119] crayon_1.5.2                  rlang_1.1.1                   #> [121] KEGGREST_1.40.0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Boyi Guo. Author, maintainer. Stephanie C. Hicks. Author. Erik D. Nelson. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guo B, Huuki-Myers LA, Grant-Peters M, Collado-Torres L, Hicks SC (2023). “escheR: Unified multi-dimensional visualizations Gestalt principles.” bioRxiv. doi:10.1101/2023.03.18.533302, https://www.biorxiv.org/content/10.1101/2023.03.18.533302v2.","code":"@Article{,   title = {escheR: Unified multi-dimensional visualizations with Gestalt principles},   author = {Boyi Guo and Louise A Huuki-Myers and Melissa Grant-Peters and Leonardo Collado-Torres and Stephanie C. Hicks},   journal = {bioRxiv},   year = {2023},   doi = {10.1101/2023.03.18.533302},   publisher = {Cold Spring Harbor Laboratory},   url = {https://www.biorxiv.org/content/10.1101/2023.03.18.533302v2}, }"},{"path":"/index.html","id":"escher","dir":"","previous_headings":"","what":"Unified multi-dimensional visualizations with Gestalt principles","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"goal escheR create unified multi-dimensional spatial visualizations spatially-resolved transcriptomics data following Gestalt principles. Gestalt principles refer set rules describing humans perceive interpret visual information commonly applied art designs. implementation based state--art data visualization framework ggplot2 map individual variables different aesthetics simultaneously display disparate variables, showing relationship spatial context.  preprint describing innovative visualization available bioRxiv.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"can install latest release version escheR Bioconductor. using following code install version nnSVG package Bioconductor. Additional details shown Bioconductor page. {r} (!require(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") } BiocManager::install(\"escheR\") latest development version can also installed devel version Bioconductor GitHub following {r} (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"boyiguo1/escheR\") R version v4.3 like install escheR, can follow {r} (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"boyiguo1/escheR@pre-R4.3\") WARNING: purpose branch pre-R4.3 allow users use escheR formal release R 4.3 early stage R 4.3 release. branch update development passing escheR v0.99.6. recommend users update R versions date.","code":""},{"path":"/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"Please find end--end tutorial https://boyiguo1.github.io/escheR/","code":""},{"path":[]},{"path":"/index.html","id":"frequently-asked-questions","dir":"","previous_headings":"","what":"Frequently Asked Questions","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"Can use escheR SingleCellExperiment object? Yes. Starting Version 1.2.0, escheR supports visualization dimensionality reduced embeddings SingleCellExperiment object providing values argument dimred. information, please see Beyond Sequence-based Spatially-Resolved Data. can make plots visualize dimensional reduced embeddings? Yes, can provide string value thedimred argument. string value included reducedDimNames(object). information, please see Beyond Sequence-based Spatially-Resolved Data. Can highlight subset groups/levels categorical variables? Yes, please find example Adjusting aesthetics. Can escheR directly applied Seurat Giotto objects? Unfortunately, Seurat Giotto objects can directly pipe make_escheR function. Instead, provide generic function works data.frame object input. Please find example via Beyond Bioconductor Eco-system. can make paneled figure containing multiple escheR plots? can compile arrange individual plots escheR via functions, e.g. cowplot::plot_grid, patchwork. Please find example via Plot Multiple Samples. can choose color palettes add_fill add_ground minimize interference? Interested user can explore topic bivariate color palette. blog post Jakub Nowosad R package biscale helpful. Can apply escheR plot image-based spatially resolved data? principle, escheR can used visualize image-based spatially-resolved (SR) data. See examples via Image-based SpatialExperiment Object. Nevertheless, still optimizing design principles image-based SR data due difference throughput compared sequence-based spatially resolved data. Optimization image-based SR data visualization main focus upcoming updates. open working new ideas seek collaboration. Can plot polygons data points show cell morphology? Unfortunately, now. acknowledge important feature consider, motivated implement future updates.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"preprint describing escheR available bioRxiv: Guo B, Nelson ED, Huuki-Myers LA, Grant-Peters M, Collado-Torres L, Hicks SC (2023). “escheR: Unified multi-dimensional visualizations Gestalt principles.” bioRxiv. doi:10.1101/2023.03.18.533302","code":""},{"path":[]},{"path":"/index.html","id":"the-importance-of-visual-analytics","dir":"","previous_headings":"","what":"The importance of visual analytics","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"panel relational plots book visual display quantitative information Edward Tufte. book inspired think meaning visual analytics era computational science, motivates think statistical graphics design meaning.","code":""},{"path":"/index.html","id":"development-tools","dir":"","previous_headings":"","what":"Development tools","title":"Unified multi-dimensional visualizations with Gestalt principles","text":"Continuous code testing possible thanks GitHub actions biocthis, documentation website automatically updated thanks pkgdown. code styled automatically thanks styler. documentation formatted thanks devtools roxygen2.","code":""},{"path":"/reference/add_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding fill to highlight the figure in the spatial map — add_fill","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"Adding fill highlight figure spatial map","code":""},{"path":"/reference/add_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"","code":"add_fill(p, var, point_size = 2, ...)"},{"path":"/reference/add_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. point_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments.","code":""},{"path":"/reference/add_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"ggplot object.","code":""},{"path":"/reference/add_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding fill to highlight the figure in the spatial map — add_fill","text":"","code":"library(STexampleData) #> Loading required package: ExperimentHub #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: AnnotationHub #> Loading required package: BiocFileCache #> Loading required package: dbplyr #> Loading required package: SpatialExperiment #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #> The following object is masked from ‘package:ExperimentHub’: #>  #>     cache #> The following object is masked from ‘package:AnnotationHub’: #>  #>     cache  spe <- Visium_humanDLPFC() #> see ?STexampleData and browseVignettes('STexampleData') for documentation #> loading from cache  make_escheR(spe) |>     add_fill(var = \"ground_truth\")"},{"path":"/reference/add_ground.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding border to highlight the ground in the spatial map — add_ground","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"Adding border highlight ground spatial map","code":""},{"path":"/reference/add_ground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"","code":"add_ground(p, var, stroke = 0.5, point_size = 2, ...)"},{"path":"/reference/add_ground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. stroke numeric(1) specifying thickness border. point_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments.","code":""},{"path":"/reference/add_ground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"ggplot object.","code":""},{"path":"/reference/add_ground.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding border to highlight the ground in the spatial map — add_ground","text":"","code":"library(STexampleData)  spe <- Visium_humanDLPFC() #> see ?STexampleData and browseVignettes('STexampleData') for documentation #> loading from cache  make_escheR(spe) |>     add_ground(var = \"ground_truth\")"},{"path":"/reference/add_symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding symbols to each spot in the spatial map — add_symbol","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"Adding symbols spot spatial map","code":""},{"path":"/reference/add_symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"","code":"add_symbol(p, var, size = 1, ...)"},{"path":"/reference/add_symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"p spatial map created make_escheR(), without layers aesthetics. var character(1) name colData(spe) column values used background. size numeric(1) specifying size symbols ggplot. Defaults 1. ... Reserved future arguments.","code":""},{"path":"/reference/add_symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"ggplot object.","code":""},{"path":"/reference/add_symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adding symbols to each spot in the spatial map — add_symbol","text":"","code":"library(STexampleData)  spe <- Visium_humanDLPFC() #> see ?STexampleData and browseVignettes('STexampleData') for documentation #> loading from cache  # Convert a continuous variable to categorical spe$in_tissue <- factor(spe$in_tissue)  make_escheR(spe) |>     add_ground(var = \"ground_truth\") |>     add_symbol(var = \"in_tissue\", size = 0.5)"},{"path":"/reference/dot-contain_reserved_col_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if rowData(spe) contains reserved name — .contain_reserved_col_name","title":"Check if rowData(spe) contains reserved name — .contain_reserved_col_name","text":"Internal Funciton","code":""},{"path":"/reference/dot-contain_reserved_col_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if rowData(spe) contains reserved name — .contain_reserved_col_name","text":"","code":".contain_reserved_col_name(col_name)"},{"path":"/reference/dot-contain_reserved_col_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if rowData(spe) contains reserved name — .contain_reserved_col_name","text":"col_name colnames","code":""},{"path":"/reference/dot-contain_reserved_col_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if rowData(spe) contains reserved name — .contain_reserved_col_name","text":"TRUE col_name contains reserved names, FALSE","code":""},{"path":"/reference/make_escheR.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new spatial map for spatial transcriptomics data — make_escheR","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"make_escheR() generic function initialize ggplot object contains spatial map. ggplot object saves input spatial transcriptomics data, transcriptomics data used following layering process add aesthestic components plot following grammar graphics ggplot2 syntax.","code":""},{"path":"/reference/make_escheR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"","code":"make_escheR(object, spot_size = 2, ...)  # S3 method for SingleCellExperiment make_escheR(object, spot_size = 2, dimred = \"PCA\", ...)  # S3 method for SpatialExperiment make_escheR(object, spot_size = 2, dimred = NULL, y_reverse = TRUE, ...)  # S3 method for data.frame make_escheR(object, spot_size = 2, .x, .y, ...)"},{"path":"/reference/make_escheR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"object data object contains spatial transcriptomics data. Currently working spatial transcriptomics data SpatialExperiment objects. spot_size numeric(1) specifying size spot ggplot. Defaults 2. ... Reserved future arguments. dimred String integer scalar specifying existing dimensionality reduction results use. y_reverse (logical) Whether reverse y coordinates, often required 10x Genomics Visium data. Default = TRUE. .x X-coordinate .y Y-coordinate","code":""},{"path":"/reference/make_escheR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"ggplot object contains spatial transcriptomics data.","code":""},{"path":"/reference/make_escheR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"Guo B, Huuki-Myers LA, Grant-Peters M, Collado-Torres L, Hicks SC (2023). escheR: Unified multi-dimensional visualizations Gestalt principles. bioRxiv. doi:10.1101/2023.03.18.533302","code":""},{"path":"/reference/make_escheR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new spatial map for spatial transcriptomics data — make_escheR","text":"","code":"library(STexampleData) # SpatialExperiment Object spe <- Visium_humanDLPFC() #> see ?STexampleData and browseVignettes('STexampleData') for documentation #> loading from cache make_escheR(spe)   # SingleCellExperiment Object sce <- SingleCellExperiment(counts(spe)) reducedDims(sce) <- list(    # Example embedding     EG = matrix(seq.int(1, ncol(spe)*2), ncol = 2)     ) make_escheR(sce, dimred = \"EG\")  # data.frame Object x <- spatialCoords(spe)[,1] y <- spatialCoords(spe)[,2] df <- colData(spe) |> data.frame() make_escheR(object = df, .x = x , .y = y)"},{"path":[]},{"path":"/news/index.html","id":"escher-111","dir":"Changelog","previous_headings":"","what":"escheR 1.1.1","title":"escheR 1.1.1","text":"SIGNIFICANT USER-VISIBLE CHANGES dependency package spatialLIBD removed Revise README file add explanations Gestalt Principles help users grasp big picture idea without going read manuscript.","code":""},{"path":"/news/index.html","id":"escher-0998","dir":"Changelog","previous_headings":"","what":"escheR 0.99.8","title":"escheR 0.99.8","text":"SIGNIFICANT USER-VISIBLE CHANGES Add new argument y_reverse = TRUE make_escheR provide consistent orientation spot plot tissue image (see Issue #13)","code":""},{"path":"/news/index.html","id":"escher-0997","dir":"Changelog","previous_headings":"","what":"escheR 0.99.7","title":"escheR 0.99.7","text":"SIGNIFICANT USER-VISIBLE CHANGES Add default color scheme (viridis) add_fill Add explicit reference spatialLIBD make_escheR documentation Add installation instruction users whose R version pre-R4.3","code":""},{"path":"/news/index.html","id":"escher-0996","dir":"Changelog","previous_headings":"","what":"escheR 0.99.6","title":"escheR 0.99.6","text":"SIGNIFICANT USER-VISIBLE CHANGES Add minimium versions dependencies imported packages Import individual functions NAMESPACE packages Clean comments code Accepted Bioconductor released Bioconductor 3.17","code":""},{"path":"/news/index.html","id":"escher-0991","dir":"Changelog","previous_headings":"","what":"escheR 0.99.1","title":"escheR 0.99.1","text":"NEW FEATURES Added NEWS.md file track changes package. First full version package submitted Bioconductor. See Bioconductor submission .","code":""}]
